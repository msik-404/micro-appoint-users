// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: userspb.proto

package userspb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CustomerCredentialsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mail string `protobuf:"bytes,1,opt,name=mail,proto3" json:"mail,omitempty"`
}

func (x *CustomerCredentialsRequest) Reset() {
	*x = CustomerCredentialsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userspb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerCredentialsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerCredentialsRequest) ProtoMessage() {}

func (x *CustomerCredentialsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userspb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerCredentialsRequest.ProtoReflect.Descriptor instead.
func (*CustomerCredentialsRequest) Descriptor() ([]byte, []int) {
	return file_userspb_proto_rawDescGZIP(), []int{0}
}

func (x *CustomerCredentialsRequest) GetMail() string {
	if x != nil {
		return x.Mail
	}
	return ""
}

type OwnerCredentialsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mail string `protobuf:"bytes,1,opt,name=mail,proto3" json:"mail,omitempty"`
}

func (x *OwnerCredentialsRequest) Reset() {
	*x = OwnerCredentialsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userspb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OwnerCredentialsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnerCredentialsRequest) ProtoMessage() {}

func (x *OwnerCredentialsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userspb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnerCredentialsRequest.ProtoReflect.Descriptor instead.
func (*OwnerCredentialsRequest) Descriptor() ([]byte, []int) {
	return file_userspb_proto_rawDescGZIP(), []int{1}
}

func (x *OwnerCredentialsRequest) GetMail() string {
	if x != nil {
		return x.Mail
	}
	return ""
}

type CredentialsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	HashedPwd *string `protobuf:"bytes,2,opt,name=hashed_pwd,json=hashedPwd,proto3,oneof" json:"hashed_pwd,omitempty"`
}

func (x *CredentialsReply) Reset() {
	*x = CredentialsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userspb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CredentialsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CredentialsReply) ProtoMessage() {}

func (x *CredentialsReply) ProtoReflect() protoreflect.Message {
	mi := &file_userspb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CredentialsReply.ProtoReflect.Descriptor instead.
func (*CredentialsReply) Descriptor() ([]byte, []int) {
	return file_userspb_proto_rawDescGZIP(), []int{2}
}

func (x *CredentialsReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CredentialsReply) GetHashedPwd() string {
	if x != nil && x.HashedPwd != nil {
		return *x.HashedPwd
	}
	return ""
}

type OwnerCompaniesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *OwnerCompaniesRequest) Reset() {
	*x = OwnerCompaniesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userspb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OwnerCompaniesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnerCompaniesRequest) ProtoMessage() {}

func (x *OwnerCompaniesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userspb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnerCompaniesRequest.ProtoReflect.Descriptor instead.
func (*OwnerCompaniesRequest) Descriptor() ([]byte, []int) {
	return file_userspb_proto_rawDescGZIP(), []int{3}
}

func (x *OwnerCompaniesRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type OwnerCompaniesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Companies []string `protobuf:"bytes,2,rep,name=companies,proto3" json:"companies,omitempty"`
}

func (x *OwnerCompaniesReply) Reset() {
	*x = OwnerCompaniesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userspb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OwnerCompaniesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnerCompaniesReply) ProtoMessage() {}

func (x *OwnerCompaniesReply) ProtoReflect() protoreflect.Message {
	mi := &file_userspb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnerCompaniesReply.ProtoReflect.Descriptor instead.
func (*OwnerCompaniesReply) Descriptor() ([]byte, []int) {
	return file_userspb_proto_rawDescGZIP(), []int{4}
}

func (x *OwnerCompaniesReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OwnerCompaniesReply) GetCompanies() []string {
	if x != nil {
		return x.Companies
	}
	return nil
}

type AddCustomerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mail      string  `protobuf:"bytes,1,opt,name=mail,proto3" json:"mail,omitempty"`
	HashedPwd *string `protobuf:"bytes,2,opt,name=hashed_pwd,json=hashedPwd,proto3,oneof" json:"hashed_pwd,omitempty"`
	Name      *string `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Surname   *string `protobuf:"bytes,4,opt,name=surname,proto3,oneof" json:"surname,omitempty"`
}

func (x *AddCustomerRequest) Reset() {
	*x = AddCustomerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userspb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCustomerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCustomerRequest) ProtoMessage() {}

func (x *AddCustomerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userspb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCustomerRequest.ProtoReflect.Descriptor instead.
func (*AddCustomerRequest) Descriptor() ([]byte, []int) {
	return file_userspb_proto_rawDescGZIP(), []int{5}
}

func (x *AddCustomerRequest) GetMail() string {
	if x != nil {
		return x.Mail
	}
	return ""
}

func (x *AddCustomerRequest) GetHashedPwd() string {
	if x != nil && x.HashedPwd != nil {
		return *x.HashedPwd
	}
	return ""
}

func (x *AddCustomerRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *AddCustomerRequest) GetSurname() string {
	if x != nil && x.Surname != nil {
		return *x.Surname
	}
	return ""
}

type AddOwnerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mail      string  `protobuf:"bytes,1,opt,name=mail,proto3" json:"mail,omitempty"`
	HashedPwd *string `protobuf:"bytes,2,opt,name=hashed_pwd,json=hashedPwd,proto3,oneof" json:"hashed_pwd,omitempty"`
	Name      *string `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Surname   *string `protobuf:"bytes,4,opt,name=surname,proto3,oneof" json:"surname,omitempty"`
}

func (x *AddOwnerRequest) Reset() {
	*x = AddOwnerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userspb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOwnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOwnerRequest) ProtoMessage() {}

func (x *AddOwnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userspb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOwnerRequest.ProtoReflect.Descriptor instead.
func (*AddOwnerRequest) Descriptor() ([]byte, []int) {
	return file_userspb_proto_rawDescGZIP(), []int{6}
}

func (x *AddOwnerRequest) GetMail() string {
	if x != nil {
		return x.Mail
	}
	return ""
}

func (x *AddOwnerRequest) GetHashedPwd() string {
	if x != nil && x.HashedPwd != nil {
		return *x.HashedPwd
	}
	return ""
}

func (x *AddOwnerRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *AddOwnerRequest) GetSurname() string {
	if x != nil && x.Surname != nil {
		return *x.Surname
	}
	return ""
}

type AddOwnerCompanyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CompanyId *string `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3,oneof" json:"company_id,omitempty"`
}

func (x *AddOwnerCompanyRequest) Reset() {
	*x = AddOwnerCompanyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userspb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOwnerCompanyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOwnerCompanyRequest) ProtoMessage() {}

func (x *AddOwnerCompanyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userspb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOwnerCompanyRequest.ProtoReflect.Descriptor instead.
func (*AddOwnerCompanyRequest) Descriptor() ([]byte, []int) {
	return file_userspb_proto_rawDescGZIP(), []int{7}
}

func (x *AddOwnerCompanyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddOwnerCompanyRequest) GetCompanyId() string {
	if x != nil && x.CompanyId != nil {
		return *x.CompanyId
	}
	return ""
}

type DeleteOwnerCompanyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CompanyId *string `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3,oneof" json:"company_id,omitempty"`
}

func (x *DeleteOwnerCompanyRequest) Reset() {
	*x = DeleteOwnerCompanyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userspb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOwnerCompanyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOwnerCompanyRequest) ProtoMessage() {}

func (x *DeleteOwnerCompanyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userspb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOwnerCompanyRequest.ProtoReflect.Descriptor instead.
func (*DeleteOwnerCompanyRequest) Descriptor() ([]byte, []int) {
	return file_userspb_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteOwnerCompanyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteOwnerCompanyRequest) GetCompanyId() string {
	if x != nil && x.CompanyId != nil {
		return *x.CompanyId
	}
	return ""
}

type UpdateCustomerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Mail      *string `protobuf:"bytes,2,opt,name=mail,proto3,oneof" json:"mail,omitempty"`
	HashedPwd *string `protobuf:"bytes,3,opt,name=hashed_pwd,json=hashedPwd,proto3,oneof" json:"hashed_pwd,omitempty"`
	Name      *string `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Surname   *string `protobuf:"bytes,5,opt,name=surname,proto3,oneof" json:"surname,omitempty"`
}

func (x *UpdateCustomerRequest) Reset() {
	*x = UpdateCustomerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userspb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomerRequest) ProtoMessage() {}

func (x *UpdateCustomerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userspb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomerRequest.ProtoReflect.Descriptor instead.
func (*UpdateCustomerRequest) Descriptor() ([]byte, []int) {
	return file_userspb_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateCustomerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateCustomerRequest) GetMail() string {
	if x != nil && x.Mail != nil {
		return *x.Mail
	}
	return ""
}

func (x *UpdateCustomerRequest) GetHashedPwd() string {
	if x != nil && x.HashedPwd != nil {
		return *x.HashedPwd
	}
	return ""
}

func (x *UpdateCustomerRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateCustomerRequest) GetSurname() string {
	if x != nil && x.Surname != nil {
		return *x.Surname
	}
	return ""
}

type UpdateOwnerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Mail      *string `protobuf:"bytes,2,opt,name=mail,proto3,oneof" json:"mail,omitempty"`
	HashedPwd *string `protobuf:"bytes,3,opt,name=hashed_pwd,json=hashedPwd,proto3,oneof" json:"hashed_pwd,omitempty"`
	Name      *string `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Surname   *string `protobuf:"bytes,5,opt,name=surname,proto3,oneof" json:"surname,omitempty"`
}

func (x *UpdateOwnerRequest) Reset() {
	*x = UpdateOwnerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userspb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOwnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOwnerRequest) ProtoMessage() {}

func (x *UpdateOwnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userspb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOwnerRequest.ProtoReflect.Descriptor instead.
func (*UpdateOwnerRequest) Descriptor() ([]byte, []int) {
	return file_userspb_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateOwnerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateOwnerRequest) GetMail() string {
	if x != nil && x.Mail != nil {
		return *x.Mail
	}
	return ""
}

func (x *UpdateOwnerRequest) GetHashedPwd() string {
	if x != nil && x.HashedPwd != nil {
		return *x.HashedPwd
	}
	return ""
}

func (x *UpdateOwnerRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateOwnerRequest) GetSurname() string {
	if x != nil && x.Surname != nil {
		return *x.Surname
	}
	return ""
}

type DeleteCustomerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCustomerRequest) Reset() {
	*x = DeleteCustomerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userspb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCustomerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCustomerRequest) ProtoMessage() {}

func (x *DeleteCustomerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userspb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCustomerRequest.ProtoReflect.Descriptor instead.
func (*DeleteCustomerRequest) Descriptor() ([]byte, []int) {
	return file_userspb_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteCustomerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteOwnerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteOwnerRequest) Reset() {
	*x = DeleteOwnerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userspb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOwnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOwnerRequest) ProtoMessage() {}

func (x *DeleteOwnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userspb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOwnerRequest.ProtoReflect.Descriptor instead.
func (*DeleteOwnerRequest) Descriptor() ([]byte, []int) {
	return file_userspb_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteOwnerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_userspb_proto protoreflect.FileDescriptor

var file_userspb_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x62, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x30, 0x0a, 0x1a, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x2d, 0x0a, 0x17, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x55, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0a, 0x68, 0x61,
	0x73, 0x68, 0x65, 0x64, 0x5f, 0x70, 0x77, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x09, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64, 0x50, 0x77, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x70, 0x77, 0x64, 0x22, 0x27, 0x0a,
	0x15, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x13, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x22, 0xa8, 0x01, 0x0a, 0x12,
	0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x22, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64,
	0x5f, 0x70, 0x77, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x68, 0x61,
	0x73, 0x68, 0x65, 0x64, 0x50, 0x77, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x70, 0x77,
	0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73,
	0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x22,
	0x0a, 0x0a, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x70, 0x77, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64, 0x50, 0x77, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x73,
	0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07,
	0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x70, 0x77, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5b,
	0x0a, 0x16, 0x41, 0x64, 0x64, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x22, 0x5e, 0x0a, 0x19, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x22, 0xc9, 0x01, 0x0a, 0x15,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6d, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x70, 0x77, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64, 0x50, 0x77, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x73,
	0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x07,
	0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6d,
	0x61, 0x69, 0x6c, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x70,
	0x77, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xc6, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17,
	0x0a, 0x04, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04,
	0x6d, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x68, 0x65,
	0x64, 0x5f, 0x70, 0x77, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x68,
	0x61, 0x73, 0x68, 0x65, 0x64, 0x50, 0x77, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x70, 0x77, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x27, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x24, 0x0a, 0x12, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x32,
	0xe5, 0x06, 0x0a, 0x03, 0x41, 0x70, 0x69, 0x12, 0x5e, 0x0a, 0x1a, 0x46, 0x69, 0x6e, 0x64, 0x4f,
	0x6e, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x23, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x62, 0x2e,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x17, 0x46, 0x69, 0x6e, 0x64, 0x4f,
	0x6e, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x12, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x62, 0x2e, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x62, 0x2e, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x58, 0x0a, 0x16, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x61, 0x6e, 0x79, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x70, 0x62, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x70, 0x62, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x69, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0b, 0x41,
	0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x3e, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x4c, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x12, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x62, 0x2e, 0x41,
	0x64, 0x64, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x52, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x22, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x62, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x62, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x44, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1b,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x44, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x73, 0x69, 0x6b, 0x2d, 0x34, 0x30, 0x34, 0x2f, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x2d, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2d, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_userspb_proto_rawDescOnce sync.Once
	file_userspb_proto_rawDescData = file_userspb_proto_rawDesc
)

func file_userspb_proto_rawDescGZIP() []byte {
	file_userspb_proto_rawDescOnce.Do(func() {
		file_userspb_proto_rawDescData = protoimpl.X.CompressGZIP(file_userspb_proto_rawDescData)
	})
	return file_userspb_proto_rawDescData
}

var file_userspb_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_userspb_proto_goTypes = []interface{}{
	(*CustomerCredentialsRequest)(nil), // 0: userspb.CustomerCredentialsRequest
	(*OwnerCredentialsRequest)(nil),    // 1: userspb.OwnerCredentialsRequest
	(*CredentialsReply)(nil),           // 2: userspb.CredentialsReply
	(*OwnerCompaniesRequest)(nil),      // 3: userspb.OwnerCompaniesRequest
	(*OwnerCompaniesReply)(nil),        // 4: userspb.OwnerCompaniesReply
	(*AddCustomerRequest)(nil),         // 5: userspb.AddCustomerRequest
	(*AddOwnerRequest)(nil),            // 6: userspb.AddOwnerRequest
	(*AddOwnerCompanyRequest)(nil),     // 7: userspb.AddOwnerCompanyRequest
	(*DeleteOwnerCompanyRequest)(nil),  // 8: userspb.DeleteOwnerCompanyRequest
	(*UpdateCustomerRequest)(nil),      // 9: userspb.UpdateCustomerRequest
	(*UpdateOwnerRequest)(nil),         // 10: userspb.UpdateOwnerRequest
	(*DeleteCustomerRequest)(nil),      // 11: userspb.DeleteCustomerRequest
	(*DeleteOwnerRequest)(nil),         // 12: userspb.DeleteOwnerRequest
	(*emptypb.Empty)(nil),              // 13: google.protobuf.Empty
}
var file_userspb_proto_depIdxs = []int32{
	0,  // 0: userspb.Api.FindOneCustomerCredentials:input_type -> userspb.CustomerCredentialsRequest
	1,  // 1: userspb.Api.FindOneOwnerCredentials:input_type -> userspb.OwnerCredentialsRequest
	3,  // 2: userspb.Api.FindManyOwnerCompanies:input_type -> userspb.OwnerCompaniesRequest
	5,  // 3: userspb.Api.AddCustomer:input_type -> userspb.AddCustomerRequest
	6,  // 4: userspb.Api.AddOwner:input_type -> userspb.AddOwnerRequest
	7,  // 5: userspb.Api.AddOwnerCompany:input_type -> userspb.AddOwnerCompanyRequest
	8,  // 6: userspb.Api.DeleteOwnerCompany:input_type -> userspb.DeleteOwnerCompanyRequest
	9,  // 7: userspb.Api.UpdateCustomer:input_type -> userspb.UpdateCustomerRequest
	10, // 8: userspb.Api.UpdateOwner:input_type -> userspb.UpdateOwnerRequest
	11, // 9: userspb.Api.DeleteCustomer:input_type -> userspb.DeleteCustomerRequest
	12, // 10: userspb.Api.DeleteOwner:input_type -> userspb.DeleteOwnerRequest
	2,  // 11: userspb.Api.FindOneCustomerCredentials:output_type -> userspb.CredentialsReply
	2,  // 12: userspb.Api.FindOneOwnerCredentials:output_type -> userspb.CredentialsReply
	4,  // 13: userspb.Api.FindManyOwnerCompanies:output_type -> userspb.OwnerCompaniesReply
	13, // 14: userspb.Api.AddCustomer:output_type -> google.protobuf.Empty
	13, // 15: userspb.Api.AddOwner:output_type -> google.protobuf.Empty
	13, // 16: userspb.Api.AddOwnerCompany:output_type -> google.protobuf.Empty
	13, // 17: userspb.Api.DeleteOwnerCompany:output_type -> google.protobuf.Empty
	13, // 18: userspb.Api.UpdateCustomer:output_type -> google.protobuf.Empty
	13, // 19: userspb.Api.UpdateOwner:output_type -> google.protobuf.Empty
	13, // 20: userspb.Api.DeleteCustomer:output_type -> google.protobuf.Empty
	13, // 21: userspb.Api.DeleteOwner:output_type -> google.protobuf.Empty
	11, // [11:22] is the sub-list for method output_type
	0,  // [0:11] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_userspb_proto_init() }
func file_userspb_proto_init() {
	if File_userspb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_userspb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerCredentialsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userspb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OwnerCredentialsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userspb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CredentialsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userspb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OwnerCompaniesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userspb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OwnerCompaniesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userspb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCustomerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userspb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOwnerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userspb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOwnerCompanyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userspb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOwnerCompanyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userspb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userspb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOwnerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userspb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCustomerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userspb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOwnerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_userspb_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_userspb_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_userspb_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_userspb_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_userspb_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_userspb_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_userspb_proto_msgTypes[10].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_userspb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_userspb_proto_goTypes,
		DependencyIndexes: file_userspb_proto_depIdxs,
		MessageInfos:      file_userspb_proto_msgTypes,
	}.Build()
	File_userspb_proto = out.File
	file_userspb_proto_rawDesc = nil
	file_userspb_proto_goTypes = nil
	file_userspb_proto_depIdxs = nil
}
